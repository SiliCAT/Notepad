---
layout: "post"
title: "Pogoplug V4刷uboot"
date: "2016-09-30 13:09"
---

一、 检查是否可刷

1 检查坏道

Be sure there is no bad block in the first 1M of your NAND (check dmesg). This is very important, if there is bad block in the first 1M (8 blocks), don't flash u-boot, because you will almost certainly brick your box. Please post your question here (there is a work around for it).

Example of bad block in mtd0:

```
dmesg | grep -i 'bad'

[    2.413231] Scanning device for bad blocks
[    2.417731] Bad eraseblock 3 at 0x000000060000
```

This bad block is the 4th block which resides within mtd0 (block 0 to block 7). So u-boot should not be flashed.

2 检查分区信息

And your mtd partitions should be:

```
cat /proc/mtd

dev: size erasesize name
mtd0: 00100000 00020000 "u-boot"
mtd1: 00400000 00020000 "uImage"
mtd2: 02000000 00020000 "rootfs"
mtd3: 0db00000 00020000 "data"
```

 MTD parts are not importan for booting and it can be adjusted later. For users who like to keep the stock mtd definition, there is no need to adjust it to the above definition. As long as mtd0 is defined as 1MB (0x 00100000) or greater then it will be OK:

```
mtd0: 00100000 00020000 "u-boot"
```

二、 备份当前uBoot以及环境变量

Be sure to save your current uBoot image in mtd0, or have a backup image saved somewhere as precaution. And save your current u-boot envs with fw_printenv, or just copy/paste the listing into a text file. Note the nanddump command below allows future restoration to the same box you're backing up, and also can be used to restore a differrent box's mtd0 if needed.

Dumping NAND mtd0:

```
nanddump --noecc --omitoob -l 0x80000 -f mtd0 /dev/mtd0
```

2 备份环境变量
Save current envs with fw_printenv, or just copy/paste the listing into a text file.

Save envs (stock OS might not have fw_printenv, so try blparam):

```
fw_printenv > current_envs.txt
```
or

```
/usr/local/cloudengines/bin/blparam >  current_envs.txt
```

三、一些小的检查

1
uBoot envs config must be defined as followed in your /etc/fw_env.config

```
cat /etc/fw_env.config

 # MTD device name	Device offset	Env. size	Flash sector size	Number of sectors
/dev/mtd0 0xc0000 0x20000 0x20000
```

If you don't have /etc/fw_env.config file in your system then go ahead and create this file with the above content.


2

Make sure ethaddr is set in uBoot env. It must be set before rebooting the system. However, if you plan to flash the default envs image in step 8 (Flashing default u-boot envs image), then no need to worry about it now. It can be set after you've booted in to Linux. The MAC address will be set to a valid randomly generated local address.

```
fw_printenv ethaddr
```

四、准备工具并校验镜像

```
cd /tmp
wget http://jsch.pcriot.com/uboot/uboot.2016.05-tld-1.pogo_v4.bodhi.tar.gz
tar --strip-components=2 -zvxf uboot.2016.05-tld-1.pogo_v4.bodhi.tar.gz
ln -s fw_printenv fw_setenv
cp -a fw_env.config /etc/

echo "2e70f13030952f5b713ae00230f37239  uboot.2016.05-tld-1.pogo_v4.mtd0.kwb" | md5sum -c
echo "e4d3c14175319d206cfefb2a624f00a7  uboot.2016.05-tld-1.environment.img" | md5sum -c
```


五、刷写uBoot

Erase mtd0

```
flash_erase /dev/mtd0 0 4
```

Expected output:

```
Erase Total 4 Units
Performing Flash Erase of length 131072 at offset 0x60000 done
```

Write image to NAND

Among the nandwrite commands below, be extra careful and execute only one nandwrite command corresponding to your platform that you are installing to, using the kwb file that you have extracted in step 5. Please double check to make sure the file is for the correct platform. Especially the similar sounding names (e.g. nsa310s and nsa310 are different u-boots).

```
nandwrite /dev/mtd0 uboot.2016.05-tld-1.pogo_v4.mtd0.kwb
```

Expected output:

```
Writing data to block 0 at offset 0x0
Writing data to block 1 at offset 0x20000
Writing data to block 2 at offset 0x40000
Writing data to block 3 at offset 0x60000
```

2 刷缺省环境变量

Flash u-boot envs to NAND location 0xC0000.

Be extra careful with the next 2 commands, you should see output that look like below. If there is error, then do not reboot, post your problem here so we can help.

```
/usr/sbin/flash_erase /dev/mtd0 0xc0000 1
```
Expected output:

```
Erase Total 1 Units
Performing Flash Erase of length 131072 at offset 0xc0000 done
```

```
/usr/sbin/nandwrite -s 786432 /dev/mtd0 uboot.2016.05-tld-1.environment.img
```
Expected output:

```
Writing data to block 6 at offset 0xc0000
```

六、配置环境变量

for Pogo V4/Mobile:

```
fw_setenv arcNumber 3960
fw_setenv machid f78
```

Then for all boxes, restore these 2 envs using the saved envs text in step c (replace xxx with the real saved values)

```
fw_setenv mtdparts 'xxxxxxxxx'
fw_setenv ethaddr 'xx:xx:xx:xx:xx:xx'
```

Adjust the DTB name to boot with a rootfs that has FDT kernel (this is the normal case):

Find your box DTB file in the rootfs /boot/dts directory and adjust the env to it. For example, if the box is the Dockstar

```
fw_setenv dtb_file '/boot/dts/kirkwood-dockstar.dtb'
```

For sanity check, print out uBoot envs to see if they look OK.

```
fw_printenv
```

and then double check the ethaddr env again to be sure. Don't reboot if there is error while listing U-Boot envs.

七、设置netconsole

Set up netconsole. It's important to set up neconsole if you don't already have serial console connected. If you've flashed the default environments in step 8 then activate netconsole with the following envs:

```
fw_setenv preboot_nc 'setenv nc_ready 0; for pingstat in 1 2 3 4 5; do; sleep 1; if run if_netconsole; then setenv nc_ready 1; fi; done; if test $nc_ready -eq 1; then run start_netconsole; fi'
fw_setenv preboot 'run preboot_nc'
fw_setenv ipaddr    '192.168.0.xxx'
fw_setenv serverip '192.168.0.yyy'
```

where the 192.168.0.xxx is this plug IP address, and 192.168.0.yyy is the IP address of the netconsole server where it will monitor the output from the this plug (adjust them to the real values in your own local network settings).


八、设置引导次序
